{
    "queries": {
        "system_info": {
            "query": "SELECT * FROM system_info;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Retrieve system information",
            "platform": "all"
        },
        "processes": {
            "query": "SELECT * FROM processes;",
            "interval": "300",
            "version": "1.4.5",
            "description": "List process information",
            "platform": "all"
        },
        "crontab": {
            "query": "SELECT * FROM crontab;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Line parsed values FROM system and user cron/tab",
            "platform": "darwin, linux"
        },
        "launchd": {
            "query": "SELECT * FROM launchd;",
            "interval": "300",
            "version": "1.4.5",
            "description": "LaunchAgents and LaunchDaemons FROM default search paths",
            "platform": "darwin"
        },
        "startup_items": {
            "query": "SELECT * FROM startup_items;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Applications and binaries set as user/login startup items",
            "platform": "all"
        },
        "certificates": {
            "query": "SELECT * FROM certificates;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Certificate Authorities installed in Keychains/ca-bundles",
            "platform": "darwin, windows"
        },
        "cups_jobs": {
            "query": "SELECT * FROM cups_jobs;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Print jobs",
            "platform": "darwin"
        },
        "authorized_keys": {
            "query": "SELECT * FROM authorized_keys;",
            "interval": "300",
            "version": "1.4.5",
            "description": "A line-delimited authorized_keys table",
            "platform": "darwin,linux"
        },
        "dns_resolvers": {
            "query": "SELECT * FROM dns_resolvers;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Resolvers used by this host",
            "platform": "darwin,linux"
        },
        "disk_encryption": {
            "query": "SELECT e.*,m.* FROM disk_encryption as e JOIN mounts as m on e.name=m.device",
            "interval": "300",
            "version": "1.4.5",
            "description": "Returns information about disk encryption status",
            "platform": "darwin"
        },
        "etc_hosts": {
            "query": "SELECT * FROM etc_hosts;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Line-parsed /etc/hosts",
            "platform": "all"
        },
        "event_taps": {
            "query": "SELECT p.*,e.* FROM processes as p JOIN event_taps e on e.tapping_process=p.pid;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Returns information about installed event taps",
            "platform": "darwin"
        },
        "groups": {
            "query": "SELECT * FROM groups;",
            "interval": "300",
            "version": "1.4.5",
            "description": "",
            "platform": "all"
        },
        "homebrew_packages": {
            "query": "SELECT * FROM homebrew_packages;",
            "interval": "300",
            "version": "1.4.5",
            "description": "user groups",
            "platform": "darwin"
        },
        "apps": {
            "query": "SELECT * FROM apps;",
            "interval": "300",
            "version": "1.4.5",
            "description": "OS X applications installed in known search paths (e.g., /Applications) ",
            "platform": "darwin"
        },
        "kernel_extensions": {
            "query": "SELECT * FROM kernel_extensions;",
            "interval": "300",
            "version": "1.4.5",
            "description": "OS X's kernel extensions, both loaded and within the load search path",
            "platform": "darwin"
        },
        "keychain_items": {
            "query": "SELECT * FROM keychain_items;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Generic details about keychain items",
            "platform": "darwin"
        },
        "logged_in_users": {
            "query": "SELECT * FROM logged_in_users;",
            "interval": "300",
            "version": "1.4.5",
            "description": "logged in users",
            "platform": "all"
        },
        "mounts": {
            "query": "SELECT * FROM mounts;",
            "interval": "300",
            "version": "1.4.5",
            "description": "mounted file systems",
            "platform": "darwin,linux"
        },
        "nfs_shares": {
            "query": "SELECT * FROM nfs_shares;",
            "interval": "300",
            "version": "1.4.5",
            "description": "NFS shares exported by the host",
            "platform": "darwin"
        },
        "preferences": {
            "query": "SELECT * FROM preferences;",
            "interval": "300",
            "version": "1.4.5",
            "description": "OS X defaults and managed preferences.",
            "platform": "darwin"
        },
        "python_packages": {
            "query": "SELECT * FROM python_packages;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Python packages installed in a system",
            "platform": "all"
        },
        "routes": {
            "query": "SELECT * FROM routes;",
            "interval": "300",
            "version": "1.4.5",
            "description": "The active route table for the host system",
            "platform": "all"
        },
        "sandboxes": {
            "query": "SELECT * FROM sandboxes;",
            "interval": "300",
            "version": "1.4.5",
            "description": "OS X application sandboxes container details.",
            "platform": "darwin"
        },
        "shared_folders": {
            "query": "SELECT * FROM shared_folders;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Folders available to others via SMB or AFP",
            "platform": "darwin"
        },
        "sharing_preferences": {
            "query": "SELECT * FROM sharing_preferences;",
            "interval": "300",
            "version": "1.4.5",
            "description": "OS X Sharing preferences",
            "platform": "darwin"
        },
        "suid_bin": {
            "query": "SELECT * FROM suid_bin;",
            "interval": "300",
            "version": "1.4.5",
            "description": "suid binaries in common locations",
            "platform": "darwin,linux"
        },
        "system_extensions": {
            "query": "SELECT * FROM system_extensions;",
            "interval": "300",
            "version": "1.4.5",
            "description": "macOS (>= 10.15) system extension table",
            "platform": "darwin"
        },
        "users": {
            "query": "SELECT * FROM users;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Local user accounts (including domain accounts that have logged on locally (Windows))",
            "platform": "all"
        },
        "process_open_files": {
            "query": "SELECT p.*,e.* FROM processes as p JOIN process_open_files as e USING  (pid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "File descriptors for each process",
            "platform": "darwin,linux"
        },
        "process_open_pipes": {
            "query": "SELECT p.*,e.* FROM processes as p JOIN process_open_pipes as e USING  (pid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "Pipes and partner processes for each process.",
            "platform": "darwin,linux"
        },
        "process_open_sockets": {
            "query": "SELECT p.*,e.* FROM processes as p JOIN process_open_sockets as e USING  (pid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "Processes which have open network sockets on the system.",
            "platform": "all"
        },
        "listening_ports": {
            "query": "SELECT p.*,e.* FROM processes as p JOIN listening_ports as e USING  (pid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "Processes with listening (bound) network sockets/ports",
            "platform": "all"
        },
        "process_envs": {
            "query": "SELECT p.*,e.* FROM processes as p JOIN process_envs as e USING  (pid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "A key/value table of environment variables for each process",
            "platform": "darwin,linux"
        },
        "appcompat_shims": {
            "query": "SELECT * FROM appcompat_shims;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Application Compatibility shims are a way to persist malware. This table presents the AppCompat Shim information FROM the registry in a nice format. See http://files.brucon.org/2015/Tomczak_and_Ballenthin_Shims_for_the_Win.pdf for more details",
            "platform": "windows"
        },
        "autoexec": {
            "query": "SELECT * FROM autoexec;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Aggregate of executables that will automatically execute on the target machine. This is an amalgamation of other tables like services, scheduled_tasks, startup_items and more",
            "platform": "windows"
        },
        "bitlocker_info": {
            "query": "SELECT * FROM bitlocker_info;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Retrieve bitlocker status of the machine",
            "platform": "windows"
        },
        "scheduled_tasks": {
            "query": "SELECT * FROM scheduled_tasks;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Lists all of the tasks in the Windows task scheduler",
            "platform": "windows"
        },
        "chassis_info": {
            "query": "SELECT * FROM chassis_info;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Display information pertaining to the chassis and its security status",
            "platform": "windows"
        },
        "chocolatey_packages": {
            "query": "SELECT * FROM chocolatey_packages;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Chocolatey packages installed in a system.",
            "platform": "windows"
        },
        "connectivity": {
            "query": "SELECT * FROM connectivity;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Provides the overall system's network state.",
            "platform": "windows"
        },
        "default_environment": {
            "query": "SELECT * FROM default_environment;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Default environment variables and values",
            "platform": "windows"
        },
        "disk_info": {
            "query": "SELECT * FROM disk_info;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Retrieve basic information about the physical disks of a system",
            "platform": "windows"
        },
        "drivers": {
            "query": "SELECT * FROM drivers;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Details for in-use Windows device drivers. This does not display installed but unused drivers.",
            "platform": "windows"
        },
        "interface_details": {
            "query": "SELECT a.*,d.* FROM interface_addresses as a JOIN interface_details d on d.interface=a.interface;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Detailed information and stats of network interfaces",
            "platform": "all"
        },
        "arp_cache": {
            "query": "SELECT * FROM arp_cache;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Detailed information and stats of arp_cache",
            "platform": "all"
        },
        "logical_drives": {
            "query": "SELECT * FROM logical_drives;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Details for logical drives on the system. A logical drive generally represents a single partition.",
            "platform": "windows"
        },
        "logon_sessions": {
            "query": "SELECT * FROM logon_sessions;",
            "interval": "300",
            "version": "1.4.5",
            "description": "",
            "platform": "windows"
        },
        "office_mru": {
            "query": "SELECT * FROM office_mru;",
            "interval": "300",
            "version": "1.4.5",
            "description": "View recently opened Office documents",
            "platform": "windows"
        },
        "patches": {
            "query": "SELECT * FROM patches;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Lists all the patches applied. Note: This does not include patches applied via MSI or downloaded FROM Windows Update (e.g. Service Packs)",
            "platform": "windows"
        },
        "pipes": {
            "query": "SELECT p.cmdline,p.path,e.* FROM processes as p JOIN pipes as e USING  (pid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "Named and anonymous pipes",
            "platform": "windows"
        },
        "programs": {
            "query": "SELECT * FROM programs;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Represents products as they are installed by Windows Installer. A product generally correlates to one installation package on Windows. Some fields may be blank as Windows installation details are left to the discretion of the product author",
            "platform": "windows"
        },
        "services": {
            "query": "SELECT * FROM services;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Lists all installed Windows services and their relevant data",
            "platform": "windows"
        },
        "shared_resources": {
            "query": "SELECT * FROM shared_resources;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Displays shared resources on a computer system running Windows. This may be a disk drive, printer, interprocess communication, or other sharable device.",
            "platform": "windows"
        },
        "shellbags": {
            "query": "SELECT u.username,e.* FROM users as u JOIN shellbags as e on u.uuid=e.sid",
            "interval": "300",
            "version": "1.4.5",
            "description": "Shows directories accessed via Windows Explorer",
            "platform": "windows"
        },
        "shimcache": {
            "query": "SELECT * FROM shimcache;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Application Compatibility Cache, contains artifacts of execution",
            "platform": "windows"
        },
        "wmi_filter_consumer_binding": {
            "query": "SELECT * FROM wmi_filter_consumer_binding;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Lists the relationship between event consumers and filters",
            "platform": "windows"
        },
        "wmi_event_filters": {
            "query": "SELECT * FROM wmi_event_filters;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Lists WMI event filters",
            "platform": "windows"
        },
        "wmi_cli_event_consumers": {
            "query": "SELECT * FROM wmi_cli_event_consumers;",
            "interval": "300",
            "version": "1.4.5",
            "description": "WMI CommandLineEventConsumer, which can be used for persistence on Windows.",
            "platform": "windows"
        },
        "wmi_script_event_consumers": {
            "query": "SELECT * FROM wmi_script_event_consumers;",
            "interval": "300",
            "version": "1.4.5",
            "description": "WMI ActiveScriptEventConsumer, which can be used for persistence on Windows",
            "platform": "windows"
        },
        "alf": {
            "query": "SELECT * FROM alf;",
            "interval": "300",
            "platform": "darwin",
            "version": "1.4.5",
            "description": "Retrieves the configuration values for the Application Layer Firewall for OSX.",
            "value": "Verify firewall settings are as expected"
        },
        "alf_exceptions": {
            "query": "SELECT * FROM alf_exceptions;",
            "interval": "300",
            "platform": "darwin",
            "version": "1.4.5",
            "description": "Retrieves the exceptions for the Application Layer Firewall in OSX.",
            "value": "Verify firewall settings are as expected"
        },
        "alf_services": {
            "query": "SELECT * FROM alf_services;",
            "interval": "300",
            "platform": "darwin",
            "version": "1.4.5",
            "description": "Retrieves the services for the Application Layer Firewall in OSX.",
            "value": "Verify firewall settings are as expected"
        },
        "alf_explicit_auths": {
            "query": "SELECT * FROM alf_explicit_auths;",
            "interval": "300",
            "platform": "darwin",
            "version": "1.4.5",
            "description": "Retrieves the list of processes with explicit authorization for the Application Layer Firewall.",
            "value": "Verify firewall settings are as expected"
        },
        "chrome_extensions": {
            "query": "SELECT * FROM users JOIN chrome_extensions USING (uid)",
            "interval": "300",
            "version": "1.4.5",
            "description": "Chrome extensions",
            "platform": "all"
        },
        "chrome_extension_content_scripts": {
            "query": "SELECT * FROM users JOIN chrome_extension_content_scripts USING (uid)",
            "interval": "300",
            "version": "1.4.5",
            "description": "Chrome browser extension content scripts.",
            "platform": "all"
        },
        "safari_extensions": {
            "query": "SELECT * FROM users JOIN safari_extensions USING (uid)",
            "interval": "300",
            "version": "1.4.5",
            "description": "Safari browser extension details for all users",
            "platform": "darwin"
        },
        "firefox_addons": {
            "query": "SELECT * FROM users JOIN firefox_addons USING (uid)",
            "interval": "300",
            "version": "1.4.5",
            "description": "Firefox browser extensions, webapps, and addons",
            "platform": "all"
        },
        "ssh_configs": {
            "query": "SELECT * FROM ssh_configs",
            "interval": "300",
            "version": "1.4.5",
            "description": "A table of parsed ssh_configs",
            "platform": "all"
        },
        "user_ssh_keys": {
            "query": "SELECT u.uid,u.username,u.directory,k.* FROM users as u JOIN user_ssh_keys as k USING (uid)",
            "interval": "300",
            "version": "1.4.5",
            "description": "Returns the private keys in the users ~/.ssh directory and whether or not they are encrypted.",
            "platform": "all"
        },
        "ie_extensions": {
            "query": "SELECT * FROM ie_extensions;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Internet Explorer browser extensions, webapps, and addons",
            "platform": "windows"
        },
        "browser_plugins": {
            "query": "SELECT * FROM users JOIN browser_plugins USING (uid)",
            "interval": "300",
            "version": "1.4.5",
            "description": "All C/NPAPI browser plugin details for all users.",
            "platform": "darwin"
        },
        "process_memory_map": {
            "query": "SELECT p.*,e.* FROM processes as p JOIN process_memory_map as e USING  (pid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "Process memory mapped files and pseudo device/regions.",
            "platform": "all"
        },
        "shell_history": {
            "query": "SELECT * FROM users JOIN shell_history USING (uid);",
            "interval": "300",
            "version": "1.4.5",
            "description": "Process memory mapped files and pseudo device/regions.",
            "platform": "darwin,linux"
        },
        "file_events": {
            "query": "SELECT * FROM file_events;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Track time/action changes to files specified in configuration data.",
            "platform": "darwin,linux"
        },
        "windows_security_products": {
            "query": "SELECT * FROM windows_security_products;",
            "interval": "300",
            "version": "1.4.5",
            "description": "Enumeration of registered Windows security products",
            "platform": "windows"
        },
        "windows_security_center": {
            "query": "SELECT * FROM windows_security_center;",
            "interval": "300",
            "version": "1.4.5",
            "description": "The health status of Window Security features. Health values can be 'Good', 'Poor'. 'Snoozed', 'Not Monitored', and 'Error'.",
            "platform": "windows"
        }

    }
}